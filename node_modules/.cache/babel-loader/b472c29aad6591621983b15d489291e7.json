{"ast":null,"code":"import Model from \"./model\";\nimport { act } from \"react-dom/test-utils\";\nexport default ((state = {\n  board: []\n}, action) => {\n  switch (action.type) {\n    case \"SIMPLE_ACTION\":\n      return {\n        result: action.payload\n      };\n\n    /* case \"onCellSelect\":\r\n      return {\r\n        ...state,\r\n        selected: action.payload\r\n      }; */\n\n    case \"setBoard\":\n      return { ...state,\n        board: action.payload\n      };\n\n    case \"setSelected\":\n      return { ...state,\n        isSelected: {\n          region: action.payload.region,\n          cell: action.payload.cell\n        }\n      };\n\n    case \"setCellValue\":\n      //sirve para setear el value a una cell\n      let newRegion = [...state.board[action.payload.region].slice(0, action.payload.cell), action.payload.value, ...state.board[action.payload.region].slice(action.payload.cell)];\n      return { ...state,\n        board: [...state.board.slice(0, action.payload.region), newRegion, ...state.board.slice(action.payload.region)]\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/mateo/Documentos/vscProjects/sudoku-kaizen/src/reducers/simpleReducer.js"],"names":["Model","act","state","board","action","type","result","payload","isSelected","region","cell","newRegion","slice","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAT,EAAwBC,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO;AACLC,QAAAA,MAAM,EAAEF,MAAM,CAACG;AADV,OAAP;;AAGF;;;;;;AAMA,SAAK,UAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELC,QAAAA,KAAK,EAAEC,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELM,QAAAA,UAAU,EAAE;AAAEC,UAAAA,MAAM,EAAEL,MAAM,CAACG,OAAP,CAAeE,MAAzB;AAAiCC,UAAAA,IAAI,EAAEN,MAAM,CAACG,OAAP,CAAeG;AAAtD;AAFP,OAAP;;AAIF,SAAK,cAAL;AAAqB;AACnB,UAAIC,SAAS,GAAG,CACd,GAAGT,KAAK,CAACC,KAAN,CAAYC,MAAM,CAACG,OAAP,CAAeE,MAA3B,EAAmCG,KAAnC,CAAyC,CAAzC,EAA4CR,MAAM,CAACG,OAAP,CAAeG,IAA3D,CADW,EAEdN,MAAM,CAACG,OAAP,CAAeM,KAFD,EAGd,GAAGX,KAAK,CAACC,KAAN,CAAYC,MAAM,CAACG,OAAP,CAAeE,MAA3B,EAAmCG,KAAnC,CAAyCR,MAAM,CAACG,OAAP,CAAeG,IAAxD,CAHW,CAAhB;AAMA,aAAO,EACL,GAAGR,KADE;AAELC,QAAAA,KAAK,EAAE,CACL,GAAGD,KAAK,CAACC,KAAN,CAAYS,KAAZ,CAAkB,CAAlB,EAAqBR,MAAM,CAACG,OAAP,CAAeE,MAApC,CADE,EAELE,SAFK,EAGL,GAAGT,KAAK,CAACC,KAAN,CAAYS,KAAZ,CAAkBR,MAAM,CAACG,OAAP,CAAeE,MAAjC,CAHE;AAFF,OAAP;;AAQF;AACE,aAAOP,KAAP;AArCJ;AAuCD,CAxCD","sourcesContent":["import Model from \"./model\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nexport default (state = { board: [] }, action) => {\r\n  switch (action.type) {\r\n    case \"SIMPLE_ACTION\":\r\n      return {\r\n        result: action.payload\r\n      };\r\n    /* case \"onCellSelect\":\r\n      return {\r\n        ...state,\r\n        selected: action.payload\r\n      }; */\r\n\r\n    case \"setBoard\":\r\n      return {\r\n        ...state,\r\n        board: action.payload\r\n      };\r\n    case \"setSelected\":\r\n      return {\r\n        ...state,\r\n        isSelected: { region: action.payload.region, cell: action.payload.cell }\r\n      };\r\n    case \"setCellValue\": //sirve para setear el value a una cell\r\n      let newRegion = [\r\n        ...state.board[action.payload.region].slice(0, action.payload.cell),\r\n        action.payload.value,\r\n        ...state.board[action.payload.region].slice(action.payload.cell)\r\n      ];\r\n\r\n      return {\r\n        ...state,\r\n        board: [\r\n          ...state.board.slice(0, action.payload.region),\r\n          newRegion,\r\n          ...state.board.slice(action.payload.region)\r\n        ]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}