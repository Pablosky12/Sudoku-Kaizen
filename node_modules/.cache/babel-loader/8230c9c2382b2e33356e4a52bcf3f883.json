{"ast":null,"code":"var _jsxFileName = \"/home/mateo/Documentos/vscProjects/sudoku-app/src/Cell.js\";\nimport React, { Component } from 'react';\n\nclass Cell extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.validImput = i => {\n      return i === '' || !isNaN(i) && i.length === 1;\n    };\n\n    this.cellValueChange = e => {\n      const newCellValue = e.target.value;\n\n      if (this.validImput(newCellValue)) {\n        const rI = this.props.rowIndex;\n        const cI = this.props.colIndex;\n        this.props.onValueChange(rI, cI, newCelValue);\n      }\n    };\n\n    this.generateCells = () => {\n      //only user can modify values \n      const disabled = this.props.editable;\n      const cellValue = this.props.value === '0' ? \"\" : this.props.value; //styles for the borders of the cells\n\n      const style = {};\n      const rI = this.props.rowIndex;\n      const cI = this.props.colIndex;\n\n      if (rI > 0 && rI % 3 === 0) {\n        style['borderTop'] = '2px solid black';\n      }\n\n      if (cI > 0 && cI % 3 === 0) {\n        style['borderLeft'] = '2px solid black';\n      }\n\n      if (this.props.conflict) {\n        if (this.props.editable) {\n          style['background'] = 'red';\n        } else {\n          style['border'] = '1px solid red';\n        }\n      }\n\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"cell\",\n        style: style,\n        type: \"text\",\n        value: cellValue,\n        disabled: disabled,\n        onChange: this.cellValueChange(rI, cI, newCellValue),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    };\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/home/mateo/Documentos/vscProjects/sudoku-app/src/Cell.js"],"names":["React","Component","Cell","validImput","i","isNaN","length","cellValueChange","e","newCellValue","target","value","rI","props","rowIndex","cI","colIndex","onValueChange","newCelValue","generateCells","disabled","editable","cellValue","style","conflict"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAE5BE,UAF4B,GAEdC,CAAD,IAAO;AACnB,aAAQA,CAAC,KAAK,EAAN,IAAa,CAACC,KAAK,CAACD,CAAD,CAAN,IAAaA,CAAC,CAACE,MAAF,KAAa,CAA/C;AACA,KAJ2B;;AAAA,SAO5BC,eAP4B,GAOTC,CAAD,IAAO;AACxB,YAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA9B;;AACA,UAAI,KAAKR,UAAL,CAAgBM,YAAhB,CAAJ,EAAmC;AAClC,cAAMG,EAAE,GAAG,KAAKC,KAAL,CAAWC,QAAtB;AACA,cAAMC,EAAE,GAAG,KAAKF,KAAL,CAAWG,QAAtB;AACA,aAAKH,KAAL,CAAWI,aAAX,CAAyBL,EAAzB,EAA6BG,EAA7B,EAAiCG,WAAjC;AACA;AACD,KAd2B;;AAAA,SAgB5BC,aAhB4B,GAgBZ,MAAM;AACrB;AACA,YAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWQ,QAA5B;AACA,YAAMC,SAAS,GAAG,KAAKT,KAAL,CAAWF,KAAX,KAAqB,GAArB,GAA2B,EAA3B,GAAgC,KAAKE,KAAL,CAAWF,KAA7D,CAHqB,CAKrB;;AACA,YAAMY,KAAK,GAAG,EAAd;AACA,YAAMX,EAAE,GAAG,KAAKC,KAAL,CAAWC,QAAtB;AACA,YAAMC,EAAE,GAAG,KAAKF,KAAL,CAAWG,QAAtB;;AACA,UAAIJ,EAAE,GAAG,CAAL,IAAWA,EAAE,GAAG,CAAN,KAAa,CAA3B,EAA8B;AAC7BW,QAAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,iBAArB;AACA;;AACD,UAAIR,EAAE,GAAG,CAAL,IAAWA,EAAE,GAAG,CAAN,KAAa,CAA3B,EAA8B;AAC7BQ,QAAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,iBAAtB;AACA;;AACD,UAAI,KAAKV,KAAL,CAAWW,QAAf,EAAyB;AACxB,YAAI,KAAKX,KAAL,CAAWQ,QAAf,EAAyB;AACxBE,UAAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,KAAtB;AACA,SAFD,MAEO;AACNA,UAAAA,KAAK,CAAC,QAAD,CAAL,GAAkB,eAAlB;AACA;AACD;;AAED,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AACC,QAAA,SAAS,EAAG,MADb;AAEC,QAAA,KAAK,EAAIA,KAFV;AAGC,QAAA,IAAI,EAAG,MAHR;AAIC,QAAA,KAAK,EAAID,SAJV;AAKC,QAAA,QAAQ,EAAIF,QALb;AAMC,QAAA,QAAQ,EAAI,KAAKb,eAAL,CAAqBK,EAArB,EAAyBG,EAAzB,EAA6BN,YAA7B,CANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAgBA,KAvD2B;AAAA;;AAAA;;AA0D7B,eAAeP,IAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Cell extends Component {\n\t//validating the imput\n\tvalidImput = (i) => {\n\t\treturn (i === '' || (!isNaN(i) && i.length === 1))\n\t}\n\n\t//what to do when the value of the cell changes\n\tcellValueChange = (e) => {\n\t\tconst newCellValue = e.target.value;\n\t\tif (this.validImput(newCellValue)) {\n\t\t\tconst rI = this.props.rowIndex;\n\t\t\tconst cI = this.props.colIndex;\n\t\t\tthis.props.onValueChange(rI, cI, newCelValue);\n\t\t}\n\t}\n\n\tgenerateCells = () => {\n\t\t//only user can modify values \n\t\tconst disabled = this.props.editable;\n\t\tconst cellValue = this.props.value === '0' ? \"\" : this.props.value;\n\n\t\t//styles for the borders of the cells\n\t\tconst style = {};\n\t\tconst rI = this.props.rowIndex;\n\t\tconst cI = this.props.colIndex;\n\t\tif (rI > 0 && (rI % 3) === 0) {\n\t\t\tstyle['borderTop'] = '2px solid black';\n\t\t}\n\t\tif (cI > 0 && (cI % 3) === 0) {\n\t\t\tstyle['borderLeft'] = '2px solid black';\n\t\t}\n\t\tif (this.props.conflict) {\n\t\t\tif (this.props.editable) {\n\t\t\t\tstyle['background'] = 'red';\n\t\t\t} else {\n\t\t\t\tstyle['border'] = '1px solid red'\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<td>\n\t\t\t\t<input\n\t\t\t\t\tclassName = \"cell\"\n\t\t\t\t\tstyle = {style}\n\t\t\t\t\ttype = \"text\"\n\t\t\t\t\tvalue = {cellValue}\n\t\t\t\t\tdisabled = {disabled}\n\t\t\t\t\tonChange = {this.cellValueChange(rI, cI, newCellValue)}\n\t\t\t\t/>\n\t\t\t</td>\n\n\n\t\t);\n\n\n\t}\n}\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}